//  Copyright 2016 Walter Schulze
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.29.3
// source: extensions.proto

package prototests

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Container contains a field and some extensions.
type Container struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Field1          *int64                 `protobuf:"varint,1,opt,name=Field1" json:"Field1,omitempty"`
	extensionFields protoimpl.ExtensionFields
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Container) Reset() {
	*x = Container{}
	mi := &file_extensions_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Container) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Container) ProtoMessage() {}

func (x *Container) ProtoReflect() protoreflect.Message {
	mi := &file_extensions_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Container.ProtoReflect.Descriptor instead.
func (*Container) Descriptor() ([]byte, []int) {
	return file_extensions_proto_rawDescGZIP(), []int{0}
}

func (x *Container) GetField1() int64 {
	if x != nil && x.Field1 != nil {
		return *x.Field1
	}
	return 0
}

type Small struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SmallField    *int64                 `protobuf:"varint,1,opt,name=SmallField" json:"SmallField,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Small) Reset() {
	*x = Small{}
	mi := &file_extensions_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Small) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Small) ProtoMessage() {}

func (x *Small) ProtoReflect() protoreflect.Message {
	mi := &file_extensions_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Small.ProtoReflect.Descriptor instead.
func (*Small) Descriptor() ([]byte, []int) {
	return file_extensions_proto_rawDescGZIP(), []int{1}
}

func (x *Small) GetSmallField() int64 {
	if x != nil && x.SmallField != nil {
		return *x.SmallField
	}
	return 0
}

type Big struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BigField      *int64                 `protobuf:"varint,1,opt,name=BigField" json:"BigField,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Big) Reset() {
	*x = Big{}
	mi := &file_extensions_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Big) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Big) ProtoMessage() {}

func (x *Big) ProtoReflect() protoreflect.Message {
	mi := &file_extensions_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Big.ProtoReflect.Descriptor instead.
func (*Big) Descriptor() ([]byte, []int) {
	return file_extensions_proto_rawDescGZIP(), []int{2}
}

func (x *Big) GetBigField() int64 {
	if x != nil && x.BigField != nil {
		return *x.BigField
	}
	return 0
}

// BigContainer contains 3 fields and two extension ranges.
type BigContainer struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Field2          *int64                 `protobuf:"varint,2,opt,name=Field2" json:"Field2,omitempty"`
	Field13         *int64                 `protobuf:"varint,13,opt,name=Field13" json:"Field13,omitempty"`
	M               *Container             `protobuf:"bytes,1,opt,name=M" json:"M,omitempty"`
	extensionFields protoimpl.ExtensionFields
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BigContainer) Reset() {
	*x = BigContainer{}
	mi := &file_extensions_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BigContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BigContainer) ProtoMessage() {}

func (x *BigContainer) ProtoReflect() protoreflect.Message {
	mi := &file_extensions_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BigContainer.ProtoReflect.Descriptor instead.
func (*BigContainer) Descriptor() ([]byte, []int) {
	return file_extensions_proto_rawDescGZIP(), []int{3}
}

func (x *BigContainer) GetField2() int64 {
	if x != nil && x.Field2 != nil {
		return *x.Field2
	}
	return 0
}

func (x *BigContainer) GetField13() int64 {
	if x != nil && x.Field13 != nil {
		return *x.Field13
	}
	return 0
}

func (x *BigContainer) GetM() *Container {
	if x != nil {
		return x.M
	}
	return nil
}

var file_extensions_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*Container)(nil),
		ExtensionType: (*float64)(nil),
		Field:         100,
		Name:          "prototests.FieldA",
		Tag:           "fixed64,100,opt,name=FieldA",
		Filename:      "extensions.proto",
	},
	{
		ExtendedType:  (*Container)(nil),
		ExtensionType: (*Small)(nil),
		Field:         101,
		Name:          "prototests.FieldB",
		Tag:           "bytes,101,opt,name=FieldB",
		Filename:      "extensions.proto",
	},
	{
		ExtendedType:  (*Container)(nil),
		ExtensionType: (*Big)(nil),
		Field:         102,
		Name:          "prototests.FieldC",
		Tag:           "bytes,102,opt,name=FieldC",
		Filename:      "extensions.proto",
	},
}

// Extension fields to Container.
var (
	// optional double FieldA = 100;
	E_FieldA = &file_extensions_proto_extTypes[0]
	// optional prototests.Small FieldB = 101;
	E_FieldB = &file_extensions_proto_extTypes[1]
	// optional prototests.Big FieldC = 102;
	E_FieldC = &file_extensions_proto_extTypes[2]
)

var File_extensions_proto protoreflect.FileDescriptor

var file_extensions_proto_rawDesc = []byte{
	0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x22, 0x2a,
	0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x31, 0x2a, 0x05, 0x08, 0x64, 0x10, 0xc8, 0x01, 0x22, 0x27, 0x0a, 0x05, 0x53, 0x6d,
	0x61, 0x6c, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x22, 0x21, 0x0a, 0x03, 0x42, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x69,
	0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x42, 0x69,
	0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x22, 0x71, 0x0a, 0x0c, 0x42, 0x69, 0x67, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x32,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x12, 0x18,
	0x0a, 0x07, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x33, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x33, 0x12, 0x23, 0x0a, 0x01, 0x4d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x65, 0x73, 0x74, 0x73,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x01, 0x4d, 0x2a, 0x04, 0x08,
	0x0e, 0x10, 0x11, 0x2a, 0x04, 0x08, 0x0a, 0x10, 0x0d, 0x3a, 0x2d, 0x0a, 0x06, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x41, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x65, 0x73, 0x74, 0x73,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x64, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x41, 0x3a, 0x40, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x42, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x53, 0x6d, 0x61,
	0x6c, 0x6c, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x3a, 0x3e, 0x0a, 0x06, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x43, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x65, 0x73, 0x74,
	0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x42,
	0x69, 0x67, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x61, 0x74, 0x79, 0x64, 0x69, 0x64,
	0x2f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2d, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x65, 0x73, 0x74,
	0x73,
}

var (
	file_extensions_proto_rawDescOnce sync.Once
	file_extensions_proto_rawDescData = file_extensions_proto_rawDesc
)

func file_extensions_proto_rawDescGZIP() []byte {
	file_extensions_proto_rawDescOnce.Do(func() {
		file_extensions_proto_rawDescData = protoimpl.X.CompressGZIP(file_extensions_proto_rawDescData)
	})
	return file_extensions_proto_rawDescData
}

var file_extensions_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_extensions_proto_goTypes = []any{
	(*Container)(nil),    // 0: prototests.Container
	(*Small)(nil),        // 1: prototests.Small
	(*Big)(nil),          // 2: prototests.Big
	(*BigContainer)(nil), // 3: prototests.BigContainer
}
var file_extensions_proto_depIdxs = []int32{
	0, // 0: prototests.BigContainer.M:type_name -> prototests.Container
	0, // 1: prototests.FieldA:extendee -> prototests.Container
	0, // 2: prototests.FieldB:extendee -> prototests.Container
	0, // 3: prototests.FieldC:extendee -> prototests.Container
	1, // 4: prototests.FieldB:type_name -> prototests.Small
	2, // 5: prototests.FieldC:type_name -> prototests.Big
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	4, // [4:6] is the sub-list for extension type_name
	1, // [1:4] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_extensions_proto_init() }
func file_extensions_proto_init() {
	if File_extensions_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_extensions_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 3,
			NumServices:   0,
		},
		GoTypes:           file_extensions_proto_goTypes,
		DependencyIndexes: file_extensions_proto_depIdxs,
		MessageInfos:      file_extensions_proto_msgTypes,
		ExtensionInfos:    file_extensions_proto_extTypes,
	}.Build()
	File_extensions_proto = out.File
	file_extensions_proto_rawDesc = nil
	file_extensions_proto_goTypes = nil
	file_extensions_proto_depIdxs = nil
}
